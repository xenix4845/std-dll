name: Build and Release DLL with GCC

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up MinGW
        run: |
          choco install mingw

      - name: Add MinGW to PATH
        run: |
          echo "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin" >> $GITHUB_PATH

      - name: Create bin directory
        run: mkdir bin

      - name: Build DLL with GCC
        run: |
          gcc -shared -o bin/pcinfo.dll src/pcinfo.c -Iinclude

      - name: Get or create release
        id: get_release
        shell: bash
        run: |
          RELEASE_RESPONSE=$(curl --silent "https://api.github.com/repos/$GITHUB_REPOSITORY/releases/tags/v1.0.0" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}")
          RELEASE_ID=$(echo "$RELEASE_RESPONSE" | jq '.id')
          UPLOAD_URL=$(echo "$RELEASE_RESPONSE" | jq -r '.upload_url' | cut -d'{' -f1)
          if [ "$RELEASE_ID" == "null" ]; then
            RELEASE_RESPONSE=$(curl --silent -X POST "https://api.github.com/repos/$GITHUB_REPOSITORY/releases" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -d '{
                "tag_name": "v1.0.0",
                "target_commitish": "main",
                "name": "v1.0.0",
                "body": "Release v1.0.0",
                "draft": false,
                "prerelease": false
              }')
            RELEASE_ID=$(echo "$RELEASE_RESPONSE" | jq '.id')
            UPLOAD_URL=$(echo "$RELEASE_RESPONSE" | jq -r '.upload_url' | cut -d'{' -f1)
          fi
          echo "::set-output name=release_id::$RELEASE_ID"
          echo "::set-output name=upload_url::$UPLOAD_URL"

      - name: Upload DLL
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./bin/pcinfo.dll
          asset_name: pcinfo.dll
          asset_content_type: application/octet-stream
